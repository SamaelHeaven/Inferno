#pragma once

#include "../inferno.h"

namespace inferno {
    enum class Key {
        APOSTROPHE = internal::KeyboardKey::KEY_APOSTROPHE,
        COMMA = internal::KeyboardKey::KEY_COMMA,
        MINUS = internal::KeyboardKey::KEY_MINUS,
        PERIOD = internal::KeyboardKey::KEY_PERIOD,
        SLASH = internal::KeyboardKey::KEY_SLASH,
        ZERO = internal::KeyboardKey::KEY_ZERO,
        ONE = internal::KeyboardKey::KEY_ONE,
        TWO = internal::KeyboardKey::KEY_TWO,
        THREE = internal::KeyboardKey::KEY_THREE,
        FOUR = internal::KeyboardKey::KEY_FOUR,
        FIVE = internal::KeyboardKey::KEY_FIVE,
        SIX = internal::KeyboardKey::KEY_SIX,
        SEVEN = internal::KeyboardKey::KEY_SEVEN,
        EIGHT = internal::KeyboardKey::KEY_EIGHT,
        NINE = internal::KeyboardKey::KEY_NINE,
        SEMICOLON = internal::KeyboardKey::KEY_SEMICOLON,
        EQUAL = internal::KeyboardKey::KEY_EQUAL,
        A = internal::KeyboardKey::KEY_A,
        B = internal::KeyboardKey::KEY_B,
        C = internal::KeyboardKey::KEY_C,
        D = internal::KeyboardKey::KEY_D,
        E = internal::KeyboardKey::KEY_E,
        F = internal::KeyboardKey::KEY_F,
        G = internal::KeyboardKey::KEY_G,
        H = internal::KeyboardKey::KEY_H,
        I = internal::KeyboardKey::KEY_I,
        J = internal::KeyboardKey::KEY_J,
        K = internal::KeyboardKey::KEY_K,
        L = internal::KeyboardKey::KEY_L,
        M = internal::KeyboardKey::KEY_M,
        N = internal::KeyboardKey::KEY_N,
        O = internal::KeyboardKey::KEY_O,
        P = internal::KeyboardKey::KEY_P,
        Q = internal::KeyboardKey::KEY_Q,
        R = internal::KeyboardKey::KEY_R,
        S = internal::KeyboardKey::KEY_S,
        T = internal::KeyboardKey::KEY_T,
        U = internal::KeyboardKey::KEY_U,
        V = internal::KeyboardKey::KEY_V,
        W = internal::KeyboardKey::KEY_W,
        X = internal::KeyboardKey::KEY_X,
        Y = internal::KeyboardKey::KEY_Y,
        Z = internal::KeyboardKey::KEY_Z,
        LEFT_BRACKET = internal::KeyboardKey::KEY_LEFT_BRACKET,
        BACKSLASH = internal::KeyboardKey::KEY_BACKSLASH,
        RIGHT_BRACKET = internal::KeyboardKey::KEY_RIGHT_BRACKET,
        GRAVE = internal::KeyboardKey::KEY_GRAVE,
        SPACE = internal::KeyboardKey::KEY_SPACE,
        ESCAPE = internal::KeyboardKey::KEY_ESCAPE,
        ENTER = internal::KeyboardKey::KEY_ENTER,
        TAB = internal::KeyboardKey::KEY_TAB,
        BACKSPACE = internal::KeyboardKey::KEY_BACKSPACE,
        INSERT = internal::KeyboardKey::KEY_INSERT,
        DELETE = internal::KeyboardKey::KEY_DELETE,
        RIGHT = internal::KeyboardKey::KEY_RIGHT,
        LEFT = internal::KeyboardKey::KEY_LEFT,
        DOWN = internal::KeyboardKey::KEY_DOWN,
        UP = internal::KeyboardKey::KEY_UP,
        PAGE_UP = internal::KeyboardKey::KEY_PAGE_UP,
        PAGE_DOWN = internal::KeyboardKey::KEY_PAGE_DOWN,
        HOME = internal::KeyboardKey::KEY_HOME,
        END = internal::KeyboardKey::KEY_END,
        CAPS_LOCK = internal::KeyboardKey::KEY_CAPS_LOCK,
        SCROLL_LOCK = internal::KeyboardKey::KEY_SCROLL_LOCK,
        NUM_LOCK = internal::KeyboardKey::KEY_NUM_LOCK,
        PRINT_SCREEN = internal::KeyboardKey::KEY_PRINT_SCREEN,
        PAUSE = internal::KeyboardKey::KEY_PAUSE,
        F1 = internal::KeyboardKey::KEY_F1,
        F2 = internal::KeyboardKey::KEY_F2,
        F3 = internal::KeyboardKey::KEY_F3,
        F4 = internal::KeyboardKey::KEY_F4,
        F5 = internal::KeyboardKey::KEY_F5,
        F6 = internal::KeyboardKey::KEY_F6,
        F7 = internal::KeyboardKey::KEY_F7,
        F8 = internal::KeyboardKey::KEY_F8,
        F9 = internal::KeyboardKey::KEY_F9,
        F10 = internal::KeyboardKey::KEY_F10,
        F11 = internal::KeyboardKey::KEY_F11,
        F12 = internal::KeyboardKey::KEY_F12,
        LEFT_SHIFT = internal::KeyboardKey::KEY_LEFT_SHIFT,
        LEFT_CONTROL = internal::KeyboardKey::KEY_LEFT_CONTROL,
        LEFT_ALT = internal::KeyboardKey::KEY_LEFT_ALT,
        LEFT_SUPER = internal::KeyboardKey::KEY_LEFT_SUPER,
        RIGHT_SHIFT = internal::KeyboardKey::KEY_RIGHT_SHIFT,
        RIGHT_CONTROL = internal::KeyboardKey::KEY_RIGHT_CONTROL,
        RIGHT_ALT = internal::KeyboardKey::KEY_RIGHT_ALT,
        RIGHT_SUPER = internal::KeyboardKey::KEY_RIGHT_SUPER,
        KB_MENU = internal::KeyboardKey::KEY_KB_MENU,
        KP_0 = internal::KeyboardKey::KEY_KP_0,
        KP_1 = internal::KeyboardKey::KEY_KP_1,
        KP_2 = internal::KeyboardKey::KEY_KP_2,
        KP_3 = internal::KeyboardKey::KEY_KP_3,
        KP_4 = internal::KeyboardKey::KEY_KP_4,
        KP_5 = internal::KeyboardKey::KEY_KP_5,
        KP_6 = internal::KeyboardKey::KEY_KP_6,
        KP_7 = internal::KeyboardKey::KEY_KP_7,
        KP_8 = internal::KeyboardKey::KEY_KP_8,
        KP_9 = internal::KeyboardKey::KEY_KP_9,
        KP_DECIMAL = internal::KeyboardKey::KEY_KP_DECIMAL,
        KP_DIVIDE = internal::KeyboardKey::KEY_KP_DIVIDE,
        KP_MULTIPLY = internal::KeyboardKey::KEY_KP_MULTIPLY,
        KP_SUBTRACT = internal::KeyboardKey::KEY_KP_SUBTRACT,
        KP_ADD = internal::KeyboardKey::KEY_KP_ADD,
        KP_ENTER = internal::KeyboardKey::KEY_KP_ENTER,
        KP_EQUAL = internal::KeyboardKey::KEY_KP_EQUAL,
    };
}
